[
  {
    "family": "Data_Modeling__Supervised_Learning",
    "name": "Decision_Tree_Fit",
    "label": "Decision Tree Fit",
    "description": "Builds the decision tree model fitting the provided learning data."
  },
  {
    "name": "sklearn_decision_tree_fit",
    "label": "Decision Tree Fit",
    "description": "Builds the decision tree model fitting the provided learning data: fits a population, with the scikit-learn library",
    "algorithm": "Decision_Tree_Fit",
    "entry_point": "ikats.algo.core.ml.supervised.sk_decision_tree::fit",
    "inputs": [
      {
        "name": "population",
        "label": "Population",
        "description": "The population is defined from an object with IKATS type table.",
        "type": "table"
      }
    ],
    "parameters": [
      {
        "name": "target_column_name",
        "label": "Target",
        "description": "The name of the attribute providing the class label of the observed subject. Must match one of the available population attributes.",
        "type": "text"
      },
      {
        "name": "identifier_column_name",
        "label": "ID",
        "description": "The name of the attribute identifying each observed subject. Must match one of the available population attributes.",
        "type": "text"
      },
      {
        "name": "max_depth",
        "label": "Max depth",
        "description": "The maximum depth of the tree. When set to zero (default value), there is no constraint on the depth.",
        "type": "number",
        "default_value": 0
      },
      {
        "name": "balanced_class_weight",
        "label": "Class balancing",
        "description": "When switched ON: apply a weight balancing on the classes, inversely proportional to class frequencies in the input data: weight(label) = total_samples / (nb_classes * count_samples(label)).",
        "type": "bool",
        "default_value": false
      }
    ],
    "outputs": [
      {
        "name": "clf_model",
        "label": "Model",
        "description": "The computed decision tree model: fits the population. This binary content ought to be used by the back-end.",
        "type": "sk_model"
      },
      {
        "name": "clf_dot",
        "label": "Dot",
        "description": "The dot graph description, matching the computed decision tree model. The language dot describes trees in a plain text format. This description ought to be used by viewer.",
        "type": "dot"
      }
    ]
  },
  {
    "name": "Decision_Tree_Predict",
    "label": "Decision Tree Predict",
    "description": "Apply a decision tree model to a testing set",
    "algorithm": "Decision_Tree_Predict",
    "entry_point": "ikats.algo.core.ml.supervised.sk_decision_tree::predict",
    "inputs": [
      {
        "name": "sk_model",
        "label": "Model",
        "description": "Decision Tree model to use",
        "type": "sk_model"
      },
      {
        "name": "population_name",
        "label": "Population",
        "description": "Name of the population to test",
        "type": "table"
      }
    ],
    "parameters": [
      {
        "name": "target_column_name",
        "label": "Target",
        "description": "The name of the attribute providing the class label of the observed subject. Must match one of the available population attributes.",
        "type": "text"
      },
      {
        "name": "identifier_column_name",
        "label": "ID",
        "description": "The name of the attribute identifying each observed subject. Must match one of the available population attributes.",
        "type": "text"
      },
      {
        "name": "table_name",
        "description": "Name of the table to create",
        "type": "text",
        "label": "Table name"
      }
    ],
    "outputs": [
      {
        "name": "confusion_matrix",
        "label": "Confusion",
        "description": "Confusion matrix on predicted result against true reality",
        "type": "table"
      },
      {
        "name": "mean_accuracy",
        "label": "Score",
        "description": "Mean accuracy on the given test data and target",
        "type": "percentage"
      }

    ]
  }
]